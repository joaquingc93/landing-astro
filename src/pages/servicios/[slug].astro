---
import Layout from '@/layouts/Layout.astro';
import Lightbox from '@/components/Lightbox.astro';
import { wordpressClient, getStaticProps } from '@/lib/wordpress-client';
import { generateMetaDescription } from '@/lib/utils';
import type { Service, Project } from '@/schemas/wordpress';

// Generate static paths for all services
export async function getStaticPaths() {
  console.log('üîç Attempting to fetch services from WordPress...');
  console.log('üîó WordPress URL:', process.env.WORDPRESS_API_URL);
  try {
    const services = await wordpressClient.getAllServices();
    console.log('‚úÖ Successfully fetched', services.length, 'services from WordPress');
    console.log('üìÑ Service slugs:', services.map(s => s.slug));
    
    return services.map(service => ({
      params: { slug: service.slug },
      props: { service },
    }));
  } catch (error) {
    console.error('‚ùå Failed to fetch services for static paths:', error);
    // Return fallback paths with mock service data
    const fallbackServices = [
      {
        slug: 'pool-remodeling',
        title: { rendered: 'Pool Remodeling' },
        content: { rendered: '<p>Professional pool remodeling services to transform your backyard oasis. From resurfacing to complete renovations, we handle every aspect of pool renovation with quality craftsmanship.</p>' },
        excerpt: { rendered: 'Transform your pool with our professional remodeling services' },
        acf: {
          short_description: 'Transform your pool with our professional remodeling services including resurfacing, tile work, and equipment upgrades.',
          service_features: ['Pool Resurfacing', 'Tile Installation', 'Equipment Upgrade', 'Lighting Systems', 'Water Features']
        }
      },
      {
        slug: 'concrete-and-floors', 
        title: { rendered: 'Concrete and Floors' },
        content: { rendered: '<p>Expert concrete flooring solutions for residential and commercial properties. We specialize in decorative concrete, polished concrete, and durable flooring systems.</p>' },
        excerpt: { rendered: 'Professional concrete flooring installation and finishing services' },
        acf: {
          short_description: 'Professional concrete flooring installation including polished concrete, decorative finishes, and industrial-grade solutions.',
          service_features: ['Polished Concrete', 'Decorative Finishes', 'Epoxy Coatings', 'Crack Repair', 'Surface Preparation']
        }
      },
      {
        slug: 'residential-cleaning',
        title: { rendered: 'Residential Cleaning' },
        content: { rendered: '<p>Complete residential cleaning services for homes and apartments. Our professional team provides thorough cleaning with eco-friendly products and attention to detail.</p>' },
        excerpt: { rendered: 'Professional residential cleaning services for your home' },
        acf: {
          short_description: 'Comprehensive residential cleaning services including regular maintenance, deep cleaning, and specialized cleaning tasks.',
          service_features: ['Deep Cleaning', 'Regular Maintenance', 'Eco-Friendly Products', 'Kitchen & Bathroom', 'Window Cleaning']
        }
      },
      {
        slug: 'technical-support',
        title: { rendered: 'Technical Support' },
        content: { rendered: '<p>Professional technical support and engineering services for construction projects. Our certified engineers provide structural analysis, project planning, and technical consultation.</p>' },
        excerpt: { rendered: 'Expert technical support and engineering consultation services' },
        acf: {
          short_description: 'Professional technical support including structural engineering, project consultation, and technical analysis for construction projects.',
          service_features: ['Structural Analysis', 'Project Planning', 'Code Compliance', 'Technical Drawings', 'Site Inspection']
        }
      }
    ];
    
    return fallbackServices.map(service => ({
      params: { slug: service.slug },
      props: { service },
    }));
  }
}

const { service } = Astro.props as { service: Service };
const { slug } = Astro.params;

// If service is not provided (fallback), fetch it
let currentService: Service | null = service;
if (!currentService && slug) {
  currentService = await getStaticProps(
    () => wordpressClient.getServiceBySlug(slug),
    null
  );
}

// If still no service, return 404
if (!currentService) {
  throw new Error('Service not found during static generation');
}

// Assert that currentService is not null for TypeScript (we've already checked above)
currentService = currentService!;

// Process ACF fields - convert individual fields to arrays for template compatibility
if (currentService.acf) {
  // Convert individual feature fields to array
  const features: string[] = [];
  for (let i = 1; i <= 5; i++) {
    const featureKey = `service_feature_${i}` as keyof typeof currentService.acf;
    const feature = currentService.acf[featureKey];
    if (feature && typeof feature === 'string' && feature.trim()) {
      features.push(feature);
    }
  }
  
  // Convert individual image fields to gallery array using acf_fields data
  const gallery = [];
  for (let i = 1; i <= 4; i++) {
    const imageField = currentService.acf_fields?.[`service_image_${i}`];
    // Only process if it's an object with url (not empty string or false)
    if (imageField && typeof imageField === 'object' && imageField.url) {
      gallery.push({
        id: imageField.ID || imageField.id,
        url: imageField.url,
        alt: imageField.alt || '',
        title: imageField.title || '',
        width: imageField.width,
        height: imageField.height,
        mime_type: imageField.mime_type,
        sizes: imageField.sizes
      });
    }
  }
  
  currentService = {
    ...currentService,
    acf: {
      ...currentService.acf,
      service_features: features
    }
  };

  // Enrich service feature images: if we only have numeric IDs, fetch full media objects
  // This mirrors the enrichment logic used for project images in wordpress-client
  try {
    // Ensure acf_fields container exists to store enriched objects
    if (!currentService.acf_fields) {
      currentService.acf_fields = {} as any;
    }
    for (let i = 1; i <= 4; i++) {
      const key = `service_image_${i}`;
      const existing = (currentService.acf_fields as any)[key];
      // Prefer already enriched object with url
      if (existing && typeof existing === 'object' && (existing as any).url) continue;
      const rawVal = (currentService.acf as any)[key];
      // If raw value is a number (WordPress media ID), fetch media details
      if (typeof rawVal === 'number') {
        try {
          const media = await wordpressClient.getMediaById(rawVal);
          if (media) {
            (currentService.acf_fields as any)[key] = {
              ID: media.id,
              id: media.id,
              url: media.source_url,
              alt: media.alt_text || '',
              title: media.title?.rendered || '',
              width: media.media_details?.width,
              height: media.media_details?.height,
              mime_type: media.mime_type,
              sizes: media.media_details?.sizes || {}
            };
          }
        } catch (e) {
          console.warn(`[service page] Failed to enrich ${key} (id=${rawVal}):`, e);
        }
      }
    }
  } catch (enrichError) {
    console.warn('[service page] Enrichment of service images failed:', enrichError);
  }
}

// Fetch related projects for this service using the related_service field
const relatedProjects = await getStaticProps<Project[]>(
  () => wordpressClient.getProjectsByService(slug || ''),
  []
);

// Collect all images from all related projects
const allProjectImages: Array<{url: string, alt: string, projectTitle: string}> = [];

relatedProjects.forEach(project => {
  // Get all images from this project (project_image_1 through project_image_6)
  for (let i = 1; i <= 6; i++) {
    const imageField = project.acf_fields?.[`project_image_${i}`];
    if (imageField && imageField.url) {
      allProjectImages.push({
        url: imageField.url,
        alt: imageField.alt || `${project.title.rendered} - Image ${i}`,
        projectTitle: project.title.rendered
      });
    }
  }
});



// Generate page metadata
const pageTitle = currentService ? `${currentService.title.rendered} Services in Florida | RenovaLink` : 'Service Not Found | RenovaLink';
const pageDescription = currentService ? generateMetaDescription(
  currentService.excerpt?.rendered || currentService.content.rendered,
  160
) : 'Service not found';

// Service details for structured data
const serviceStructuredData = currentService ? {
  "@context": "https://schema.org",
  "@type": "Service",
  "name": currentService.title.rendered,
  "description": pageDescription,
  "provider": {
    "@type": "LocalBusiness",
    "name": "RenovaLink",
    "url": "https://renovalink.com"
  },
  "serviceType": currentService.title.rendered,
  "areaServed": {
    "@type": "State",
    "name": "Florida"
  }
} : null;

// Service icons and colors mapping
const serviceDetails = {
  'pool-remodeling': {
    icon: 'M13 2L3 14h9l-1 8 10-12h-9l1-8z',
    color: 'from-blue-500 to-blue-700',
    category: 'Pool & Water Features'
  },
  // Support both historical slug variants
  'concrete-and-floors': {
    icon: 'M19 21H5a2 2 0 01-2-2V5a2 2 0 012-2h14a2 2 0 012 2v14a2 2 0 01-2 2z',
    color: 'from-gray-500 to-gray-700',
    category: 'Concrete & Flooring'
  },
  'concrete-flooring': {
    icon: 'M19 21H5a2 2 0 01-2-2V5a2 2 0 012-2h14a2 2 0 012 2v14a2 2 0 01-2 2z',
    color: 'from-gray-500 to-gray-700',
    category: 'Concrete & Flooring'
  },
  'residential-cleaning': {
    icon: 'M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16',
    color: 'from-green-500 to-green-700',
    category: 'Cleaning Services'
  },
  'technical-support': {
    icon: 'M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z',
    color: 'from-purple-500 to-purple-700',
    category: 'Technical & Engineering'
  }
};

const currentServiceDetails = serviceDetails[slug as keyof typeof serviceDetails] || serviceDetails['technical-support'];
---

<Layout
  title={pageTitle}
  description={pageDescription}
  canonical={`https://renovalink.com/servicios/${slug}`}
  type="service"
  schema={serviceStructuredData}
>
  
  <!-- Hero Section -->
  <section class="pt-20 pb-16 bg-gradient-to-br from-primary-600 via-primary-700 to-primary-800 text-white relative overflow-hidden">
    
    <!-- Background Pattern -->
    <div class="absolute inset-0 opacity-10">
      <svg width="60" height="60" viewBox="0 0 60 60" class="w-full h-full">
        <defs>
          <pattern id="service-grid" width="60" height="60" patternUnits="userSpaceOnUse">
            <path d="m 60,0 L 0,0 0,60" fill="none" stroke="white" stroke-width="1"/>
          </pattern>
        </defs>
        <rect width="100%" height="100%" fill="url(#service-grid)" />
      </svg>
    </div>
    
    <div class="container relative z-10">
      <div class="max-w-4xl mx-auto text-center">
        
        <!-- Breadcrumb -->
        <nav class="mb-8" aria-label="Breadcrumb">
          <ol class="flex items-center justify-center space-x-2 text-sm text-primary-200">
            <li><a href="/" class="hover:text-white transition-colors">Home</a></li>
            <li><span class="mx-2">/</span></li>
            <li><a href="/servicios" class="hover:text-white transition-colors">Services</a></li>
            <li><span class="mx-2">/</span></li>
            <li class="text-white font-medium">{currentService?.title.rendered || 'Service'}</li>
          </ol>
        </nav>
        
        {currentService && (
          <>
        <!-- Service Category Badge -->
        <div class="mb-6">
          <span class="inline-flex items-center px-4 py-2 bg-white/10 backdrop-blur-sm rounded-full text-sm font-medium text-primary-100 border border-white/20">
            <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24" stroke-width="2">
              <path stroke-linecap="round" stroke-linejoin="round" d={currentServiceDetails.icon} />
            </svg>
            {currentServiceDetails.category}
          </span>
        </div>
        
        <!-- Service Title -->
        <h1 class="heading-xl mb-6 text-white animate-on-scroll">
          {currentService.title.rendered}
          <span class="block text-secondary-400 mt-2">in Florida</span>
        </h1>
        
        <!-- Service Description -->
        <p class="text-xl text-primary-100 mb-8 max-w-3xl mx-auto animate-on-scroll">
          {currentService.acf?.short_description || 
            (currentService.excerpt?.rendered ? 
              currentService.excerpt.rendered.replace(/<[^>]*>/g, '') : 
              currentService.content.rendered.replace(/<[^>]*>/g, '').slice(0, 200) + '...')
          }
        </p>
          </>
        )}
        
        <!-- CTA Button (single) -->
        <div class="flex justify-center items-center animate-on-scroll">
          <a 
            href="/contacto" 
            class="btn-secondary text-lg px-10 py-5 shadow-2xl hover:shadow-secondary-500/25 hover:-translate-y-1 transform transition-all duration-300 text-center"
          >
            Get Free Estimate
            <svg class="w-5 h-5 ml-2 inline-block" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7" />
            </svg>
          </a>
        </div>
      </div>
    </div>
  </section>
  
  <!-- Service Details -->
  <section class="py-20 bg-white">
    <div class="container">
      <div class="max-w-6xl mx-auto">
        
        <!-- Content -->
          <h2 class="heading-md mb-8 animate-on-scroll text-center">Professional {currentService.title.rendered}</h2>
          
          <!-- Service Content -->
          <div class="prose prose-lg max-w-none text-neutral-700 mb-8 animate-on-scroll text-center">
            <div set:html={currentService.content.rendered} />
          </div>
          
          <!-- Service Features with Images Grid -->
          {currentService.acf?.service_features && currentService.acf.service_features.length > 0 && (
            <div class="mb-8 animate-on-scroll">
              <h3 class="text-2xl font-semibold mb-8">What's Included:</h3>
              <div class="grid grid-cols-1 lg:grid-cols-2 gap-8">
                {currentService.acf.service_features.map((feature, index) => {
                  const imageField = currentService.acf_fields?.[`service_image_${index + 1}`];
                  const description = currentService.acf?.[`service_feature_description_${index + 1}`] || 
                                    currentService.acf_fields?.[`service_feature_description_${index + 1}`] ||
                                    "Professional service delivery with quality materials and expert craftsmanship.";
                  return (
                    <div class="group bg-white rounded-xl shadow-md hover:shadow-lg transition-all duration-300 overflow-hidden border border-neutral-100">
                      <!-- Feature Image -->
                      <div class="aspect-video overflow-hidden bg-gradient-to-br from-primary-50 to-primary-100 relative">
                        {imageField?.url ? (
                          <img 
                            src={imageField.url}
                            alt={imageField.alt || feature}
                            class="w-full h-full object-cover group-hover:scale-105 transition-transform duration-500"
                            loading="lazy"
                          />
                        ) : (
                          <div class="w-full h-full flex items-center justify-center">
                            <div class="text-center">
                              <svg class="w-12 h-12 text-primary-400 mx-auto mb-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M9 12l2 2 4-4M7.835 4.697a3.42 3.42 0 001.946-.806 3.42 3.42 0 014.438 0 3.42 3.42 0 001.946.806 3.42 3.42 0 013.138 3.138 3.42 3.42 0 00.806 1.946 3.42 3.42 0 010 4.438 3.42 3.42 0 00-.806 1.946 3.42 3.42 0 01-3.138 3.138 3.42 3.42 0 00-1.946.806 3.42 3.42 0 01-4.438 0 3.42 3.42 0 00-1.946-.806 3.42 3.42 0 01-3.138-3.138 3.42 3.42 0 00-.806-1.946 3.42 3.42 0 010-4.438 3.42 3.42 0 00.806-1.946 3.42 3.42 0 013.138-3.138z" />
                              </svg>
                              <p class="text-primary-600 text-sm font-medium">Service Feature</p>
                            </div>
                          </div>
                        )}
                      </div>
                      
                      <!-- Feature Content -->
                      <div class="p-5">
                        <div class="flex items-start gap-3">
                          <div class="flex-shrink-0 mt-1">
                            <div class="w-6 h-6 bg-primary-600 rounded-full flex items-center justify-center">
                              <svg class="w-3 h-3 text-white" fill="currentColor" viewBox="0 0 20 20">
                                <path fill-rule="evenodd" d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z" clip-rule="evenodd" />
                              </svg>
                            </div>
                          </div>
                          <div>
                            <h4 class="font-semibold text-neutral-900 mb-2">{feature}</h4>
                            <p class="text-sm text-neutral-600 leading-relaxed">
                              {description}
                            </p>
                          </div>
                        </div>
                      </div>
                      
                      <!-- Bottom accent line -->
                      <div class="h-1 bg-gradient-to-r from-primary-500 to-secondary-500 transform scale-x-0 group-hover:scale-x-100 transition-transform duration-300 origin-left"></div>
                    </div>
                  );
                })}
              </div>
              
              <!-- Features Summary -->
              <div class="mt-8 p-6 bg-gradient-to-r from-primary-50 to-secondary-50 rounded-xl border border-primary-100">
                <div class="flex items-start gap-4">
                  <div class="flex-shrink-0">
                    <div class="w-12 h-12 bg-primary-600 rounded-xl flex items-center justify-center shadow-lg">
                      <svg class="w-6 h-6 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4M7.835 4.697a3.42 3.42 0 001.946-.806 3.42 3.42 0 014.438 0 3.42 3.42 0 001.946.806 3.42 3.42 0 013.138 3.138 3.42 3.42 0 00.806 1.946 3.42 3.42 0 010 4.438 3.42 3.42 0 00-.806 1.946 3.42 3.42 0 01-3.138 3.138 3.42 3.42 0 00-1.946.806 3.42 3.42 0 01-4.438 0 3.42 3.42 0 00-1.946-.806 3.42 3.42 0 01-3.138-3.138 3.42 3.42 0 00-.806-1.946 3.42 3.42 0 010-4.438 3.42 3.42 0 00.806-1.946 3.42 3.42 0 013.138-3.138z" />
                      </svg>
                    </div>
                  </div>
                  <div>
                    <h4 class="font-bold text-lg text-neutral-900 mb-2">Complete Service Package</h4>
                    <p class="text-neutral-700 mb-3">
                      Our comprehensive {currentService.title.rendered.toLowerCase()} service includes all {currentService.acf.service_features.length} essential components for a successful project completion.
                    </p>
                    <div class="flex flex-wrap gap-2">
                      <span class="inline-flex items-center gap-1 bg-white px-3 py-1 rounded-full text-sm text-neutral-600 shadow-sm">
                        <svg class="w-4 h-4 text-green-500" fill="currentColor" viewBox="0 0 20 20">
                          <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd" />
                        </svg>
                        Licensed & Insured
                      </span>
                      <span class="inline-flex items-center gap-1 bg-white px-3 py-1 rounded-full text-sm text-neutral-600 shadow-sm">
                        <svg class="w-4 h-4 text-blue-500" fill="currentColor" viewBox="0 0 20 20">
                          <path fill-rule="evenodd" d="M6.267 3.455a3.066 3.066 0 001.745-.723 3.066 3.066 0 013.976 0 3.066 3.066 0 001.745.723 3.066 3.066 0 012.812 2.812c.051.643.304 1.254.723 1.745a3.066 3.066 0 010 3.976 3.066 3.066 0 00-.723 1.745 3.066 3.066 0 01-2.812 2.812 3.066 3.066 0 00-1.745.723 3.066 3.066 0 01-3.976 0 3.066 3.066 0 00-1.745-.723 3.066 3.066 0 01-2.812-2.812 3.066 3.066 0 00-.723-1.745 3.066 3.066 0 010-3.976 3.066 3.066 0 00.723-1.745 3.066 3.066 0 012.812-2.812zm7.44 5.252a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd" />
                        </svg>
                        Quality Guaranteed
                      </span>
                      <span class="inline-flex items-center gap-1 bg-white px-3 py-1 rounded-full text-sm text-neutral-600 shadow-sm">
                        <svg class="w-4 h-4 text-purple-500" fill="currentColor" viewBox="0 0 20 20">
                          <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm1-12a1 1 0 10-2 0v4a1 1 0 00.293.707l2.828 2.829a1 1 0 101.415-1.415L11 9.586V6z" clip-rule="evenodd" />
                        </svg>
                        Timely Completion
                      </span>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          )}
          
          <!-- Price Range - commented out since field is not configured in WordPress
          {currentService.acf?.price_range && (
            <div class="mb-8 animate-on-scroll">
              <h3 class="text-2xl font-semibold mb-4">Investment Range:</h3>
              <div class="inline-flex items-center px-6 py-3 bg-primary-50 text-primary-700 rounded-lg text-lg font-semibold">
                {currentService.acf.price_range}
              </div>
              <p class="text-sm text-neutral-600 mt-2">
                *Final pricing depends on project scope, materials, and timeline. Free estimates available.
              </p>
            </div>
          )}
          -->
          
          <!-- CTA -->
          <div class="animate-on-scroll text-center">
            <a 
              href="/contacto" 
              class="btn-primary text-lg px-8 py-4 shadow-lg hover:shadow-xl"
            >
              Request Consultation
              <svg class="w-5 h-5 ml-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 12h.01M12 12h.01M16 12h.01M21 12c0 4.418-4.03 8-9 8a9.863 9.863 0 01-4.255-.949L3 20l1.395-3.72C3.512 15.042 3 13.574 3 12c0-4.418 4.03-8 9-8s9 3.582 9 8z" />
              </svg>
            </a>
          </div>
        
      </div>
    </div>
  </section>
  
  <!-- Project Images Carousel -->
  {allProjectImages.length > 0 ? (
    <section class="py-20 bg-neutral-50">
      <div class="container">
        <div class="text-center mb-16">
          <h2 class="heading-md mb-6 animate-on-scroll">Recent {currentService.title.rendered} Projects</h2>
          <p class="text-xl text-neutral-600 max-w-3xl mx-auto animate-on-scroll">
            See examples of our recent work and the quality craftsmanship we bring to every project.
          </p>
        </div>
        
        <!-- Carousel Container -->
        <div class="relative">
          <!-- Carousel Wrapper -->
          <div class="overflow-hidden rounded-2xl shadow-2xl">
            <div id="projects-carousel" class="flex transition-transform duration-500 ease-in-out">
              {allProjectImages.map((image, index) => (
                <div class="w-full lg:w-1/2 xl:w-1/3 flex-shrink-0 px-4">
                  <div class="group bg-white rounded-xl overflow-hidden shadow-lg hover:shadow-xl transition-all duration-300">
                    <!-- Project Image -->
                    <div class="aspect-video overflow-hidden relative cursor-pointer gallery-image-trigger"
                         data-gallery-id="service-projects"
                         data-image-url={image.url}
                         data-image-alt={image.alt}
                         data-image-title={image.projectTitle}
                         data-image-index={index}>
                      <img 
                        src={image.url}
                        alt={image.alt}
                        class="w-full h-full object-cover group-hover:scale-105 transition-transform duration-700"
                        loading="lazy"
                      />
                      
                      <!-- Click to view overlay -->
                      <div class="absolute inset-0 bg-black/40 opacity-0 group-hover:opacity-100 transition-opacity duration-300 flex items-center justify-center">
                        <div class="text-white text-center">
                          <svg class="w-12 h-12 mx-auto mb-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0zM10 7v3m0 0v3m0-3h3m-3 0H7" />
                          </svg>
                          <p class="text-sm font-medium">Click to view</p>
                        </div>
                      </div>
                    </div>
                  </div>
                </div>
              ))}
            </div>
          </div>
          
          <!-- Carousel Controls -->
          <button 
            id="carousel-prev" 
            class="absolute left-4 top-1/2 -translate-y-1/2 bg-white/95 backdrop-blur-sm hover:bg-white text-primary-600 p-3 rounded-full shadow-xl transition-all duration-200 hover:scale-110 disabled:opacity-50 z-10"
          >
            <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7" />
            </svg>
          </button>
          
          <button 
            id="carousel-next" 
            class="absolute right-4 top-1/2 -translate-y-1/2 bg-white/95 backdrop-blur-sm hover:bg-white text-primary-600 p-3 rounded-full shadow-xl transition-all duration-200 hover:scale-110 disabled:opacity-50 z-10"
          >
            <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7" />
            </svg>
          </button>
          
          <!-- Carousel Indicators -->
          <div class="flex justify-center mt-8 space-x-2" id="carousel-indicators">
            <!-- Indicators will be generated by JavaScript -->
          </div>
        </div>
      </div>
      
    </section>
  ) : (
    <!-- No projects fallback -->
    <section class="py-20 bg-neutral-50">
      <div class="container">
        <div class="text-center">
          <h2 class="heading-md mb-6">Recent {currentService.title.rendered} Projects</h2>
          <div class="bg-white rounded-2xl p-12 shadow-lg max-w-2xl mx-auto">
            <div class="w-24 h-24 bg-primary-100 rounded-2xl flex items-center justify-center mx-auto mb-6">
              <svg class="w-12 h-12 text-primary-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 11H5m14 0a2 2 0 012 2v6a2 2 0 01-2 2H5a2 2 0 01-2-2v-6a2 2 0 012-2m14 0V9a2 2 0 00-2-2M5 9a2 2 0 012-2m0 0V5a2 2 0 012-2h6a2 2 0 012 2v2M7 7h10" />
              </svg>
            </div>
            <h3 class="text-2xl font-bold mb-4">Project Gallery Coming Soon</h3>
            <p class="text-neutral-600 mb-6">We're currently updating our project showcase. In the meantime, contact us to see examples of our recent {currentService.title.rendered.toLowerCase()} work.</p>
            <a href="/contacto" class="btn-primary">
              View Our Work
              <svg class="w-4 h-4 ml-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7" />
              </svg>
            </a>
          </div>
        </div>
      </div>
    </section>
  )}
  
  <!-- FAQ Section -->
  <section class="py-20 bg-white">
    <div class="container max-w-4xl mx-auto">
      <div class="text-center mb-16">
        <h2 class="heading-md mb-6 animate-on-scroll">Frequently Asked Questions</h2>
        <p class="text-xl text-neutral-600 animate-on-scroll">
          Common questions about our {currentService.title.rendered.toLowerCase()} services.
        </p>
      </div>
      
      <!-- FAQ Items -->
      <div class="space-y-6">
        <!-- FAQ items would be dynamically generated based on service type -->
        <div class="card p-6 animate-on-scroll">
          <button class="faq-trigger flex items-center justify-between w-full text-left" data-target="faq-1">
            <h3 class="text-lg font-semibold">How long does a typical {currentService.title.rendered.toLowerCase()} project take?</h3>
            <svg class="w-5 h-5 text-neutral-500 transform transition-transform duration-200" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7" />
            </svg>
          </button>
          <div id="faq-1" class="faq-content hidden mt-4 text-neutral-600">
            <p>Project timelines vary based on scope and complexity. Most projects range from 1-4 weeks, with larger renovations taking longer. We provide detailed timeline estimates during consultation.</p>
          </div>
        </div>
        
        <div class="card p-6 animate-on-scroll">
          <button class="faq-trigger flex items-center justify-between w-full text-left" data-target="faq-2">
            <h3 class="text-lg font-semibold">Do you provide free estimates?</h3>
            <svg class="w-5 h-5 text-neutral-500 transform transition-transform duration-200" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7" />
            </svg>
          </button>
          <div id="faq-2" class="faq-content hidden mt-4 text-neutral-600">
            <p>Yes! We offer free, detailed consultations and estimates for all our services. Our certified professionals will assess your project and provide transparent pricing with no hidden fees.</p>
          </div>
        </div>
        
        <div class="card p-6 animate-on-scroll">
          <button class="faq-trigger flex items-center justify-between w-full text-left" data-target="faq-3">
            <h3 class="text-lg font-semibold">Are you licensed and insured?</h3>
            <svg class="w-5 h-5 text-neutral-500 transform transition-transform duration-200" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7" />
            </svg>
          </button>
          <div id="faq-3" class="faq-content hidden mt-4 text-neutral-600">
            <p>Absolutely. RenovaLink is fully licensed and insured in Florida. Our team includes certified engineers and we carry comprehensive liability insurance for your protection.</p>
          </div>
        </div>
        
        <div class="card p-6 animate-on-scroll">
          <button class="faq-trigger flex items-center justify-between w-full text-left" data-target="faq-4">
            <h3 class="text-lg font-semibold">What warranty do you provide?</h3>
            <svg class="w-5 h-5 text-neutral-500 transform transition-transform duration-200" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7" />
            </svg>
          </button>
          <div id="faq-4" class="faq-content hidden mt-4 text-neutral-600">
            <p>We stand behind our work with comprehensive warranties that vary by service type. All work comes with a minimum 1-year warranty, with many services covered for longer periods. Details provided during consultation.</p>
          </div>
        </div>
      </div>
    </div>
  </section>
  
  <!-- Call to Action -->
  <section class="py-20 bg-gradient-to-br from-primary-600 to-primary-800 text-white">
    <div class="container text-center">
      <h2 class="heading-md mb-6 animate-on-scroll">Ready to Start Your {currentService.title.rendered} Project?</h2>
      <p class="text-xl text-primary-100 mb-8 max-w-3xl mx-auto animate-on-scroll">
        Contact us today for a free consultation and detailed estimate. Let's bring your vision to life.
      </p>
      
      <div class="flex flex-col sm:flex-row gap-4 justify-center items-center animate-on-scroll">
        <a href="/contacto" class="btn-secondary text-lg px-8 py-4 shadow-2xl">
          Get Free Estimate
        </a>
        <a href="tel:+1-305-XXX-XXXX" class="btn-outline text-lg px-8 py-4 text-white border-white hover:bg-white hover:text-primary-700">
          Call (305) XXX-XXXX
        </a>
      </div>
    </div>
  </section>
  
</Layout>

<script>
  // FAQ functionality
  document.addEventListener('DOMContentLoaded', () => {
    const faqTriggers = document.querySelectorAll('.faq-trigger');
    
    faqTriggers.forEach(trigger => {
      trigger.addEventListener('click', () => {
        const targetId = trigger.getAttribute('data-target');
        const content = targetId ? document.getElementById(targetId) : null;
        const arrow = trigger.querySelector('svg');
        
        if (content && arrow) {
          const isHidden = content.classList.contains('hidden');
          
          // Close all other FAQs
          faqTriggers.forEach(otherTrigger => {
            if (otherTrigger !== trigger) {
              const otherId = otherTrigger.getAttribute('data-target');
              const otherContent = otherId ? document.getElementById(otherId) : null;
              const otherArrow = otherTrigger.querySelector('svg');
              
              if (otherContent && otherArrow) {
                otherContent.classList.add('hidden');
                otherArrow.classList.remove('rotate-180');
              }
            }
          });
          
          // Toggle current FAQ
          if (isHidden) {
            content.classList.remove('hidden');
            arrow.classList.add('rotate-180');
          } else {
            content.classList.add('hidden');
            arrow.classList.remove('rotate-180');
          }
        }
      });
    });

    // Lightbox functionality
    const modal = document.getElementById('lightbox-modal');
    const lightboxImage = document.getElementById('lightbox-image') as HTMLImageElement;
    const lightboxTitle = document.getElementById('lightbox-title');
    const lightboxCounter = document.getElementById('lightbox-counter');
    const closeBtn = document.getElementById('lightbox-close');
    const prevBtn = document.getElementById('lightbox-prev');
    const nextBtn = document.getElementById('lightbox-next');
    
    if (modal && lightboxImage && lightboxTitle && lightboxCounter && closeBtn && prevBtn && nextBtn) {
      // Store gallery images globally
      window.currentGallery = [];
      window.currentImageIndex = 0;
      
      // Initialize gallery images from page data
      const galleryTriggers = document.querySelectorAll('.gallery-image-trigger');
      galleryTriggers.forEach((trigger, index) => {
        const imageData = {
          url: trigger.getAttribute('data-image-url'),
          alt: trigger.getAttribute('data-image-alt'),
          title: trigger.getAttribute('data-image-title'),
          index: index
        };
        window.currentGallery.push(imageData);
        
        // Add click event
        trigger.addEventListener('click', () => openLightbox(index));
      });
      
      function openLightbox(index: number) {
        window.currentImageIndex = index;
        updateLightboxContent();
        modal.classList.remove('opacity-0', 'invisible');
        modal.classList.add('opacity-100', 'visible');
        document.body.style.overflow = 'hidden';
      }
      
      function closeLightbox() {
        modal.classList.add('opacity-0', 'invisible');
        modal.classList.remove('opacity-100', 'visible');
        document.body.style.overflow = '';
      }
      
      function updateLightboxContent() {
        const currentImage = window.currentGallery[window.currentImageIndex];
        if (!currentImage) return;
        
        lightboxImage.src = currentImage.url;
        lightboxImage.alt = currentImage.alt;
        lightboxTitle.textContent = currentImage.title || 'Project Image';
        lightboxCounter.textContent = `${window.currentImageIndex + 1} / ${window.currentGallery.length}`;
        
        // Update navigation buttons
        prevBtn.style.display = window.currentGallery.length > 1 ? 'block' : 'none';
        nextBtn.style.display = window.currentGallery.length > 1 ? 'block' : 'none';
      }
      
      function navigateLightbox(direction: 'next' | 'prev') {
        if (direction === 'next') {
          window.currentImageIndex = (window.currentImageIndex + 1) % window.currentGallery.length;
        } else {
          window.currentImageIndex = (window.currentImageIndex - 1 + window.currentGallery.length) % window.currentGallery.length;
        }
        updateLightboxContent();
      }
      
      // Event listeners
      closeBtn.addEventListener('click', closeLightbox);
      prevBtn.addEventListener('click', () => navigateLightbox('prev'));
      nextBtn.addEventListener('click', () => navigateLightbox('next'));
      
      // Close on backdrop click
      modal.addEventListener('click', (e) => {
        if (e.target === modal) closeLightbox();
      });
      
      // Keyboard navigation
      document.addEventListener('keydown', (e) => {
        if (modal.classList.contains('opacity-100')) {
          if (e.key === 'Escape') closeLightbox();
          if (e.key === 'ArrowLeft') navigateLightbox('prev');
          if (e.key === 'ArrowRight') navigateLightbox('next');
        }
      });
    }

    // Projects Carousel functionality
    const carousel = document.getElementById('projects-carousel');
    const prevButton = document.getElementById('carousel-prev');
    const nextButton = document.getElementById('carousel-next');
    const indicatorsContainer = document.getElementById('carousel-indicators');
    
    if (carousel && prevButton && nextButton && indicatorsContainer) {
      const slides = carousel.children;
      let currentIndex = 0;
      const totalSlides = slides.length;
      
      
      // Get slides per view based on screen size
      function getSlidesPerView() {
        if (window.innerWidth >= 1280) return 3; // xl screens
        if (window.innerWidth >= 1024) return 2; // lg screens
        return 1; // mobile and tablet
      }
      
      // Create indicators
      function createIndicators() {
        indicatorsContainer.innerHTML = '';
        const slidesPerView = getSlidesPerView();
        const totalPages = Math.ceil(totalSlides / slidesPerView);
        
        for (let i = 0; i < totalPages; i++) {
          const indicator = document.createElement('button');
          indicator.className = `w-2 h-2 rounded-full transition-all duration-200 ${i === 0 ? 'bg-primary-600 w-6' : 'bg-neutral-300 hover:bg-primary-300'}`;
          indicator.addEventListener('click', () => goToSlide(i * slidesPerView));
          indicatorsContainer.appendChild(indicator);
        }
      }
      
      // Update indicators
      function updateIndicators() {
        const indicators = indicatorsContainer.children;
        const slidesPerView = getSlidesPerView();
        const currentPage = Math.floor(currentIndex / slidesPerView);
        
        Array.from(indicators).forEach((indicator, index) => {
          if (index === currentPage) {
            indicator.className = 'w-6 h-2 rounded-full bg-primary-600 transition-all duration-200';
          } else {
            indicator.className = 'w-2 h-2 rounded-full bg-neutral-300 hover:bg-primary-300 transition-all duration-200';
          }
        });
      }
      
      // Go to specific slide
      function goToSlide(index: number) {
        const slidesPerView = getSlidesPerView();
        const maxIndex = totalSlides - slidesPerView;
        currentIndex = Math.max(0, Math.min(index, maxIndex));
        
        // Calculate translation based on percentage
        const translatePercent = -(currentIndex * (100 / slidesPerView));
        carousel.style.transform = `translateX(${translatePercent}%)`;
        
        // Update button states
        (prevButton as HTMLButtonElement).disabled = currentIndex === 0;
        (nextButton as HTMLButtonElement).disabled = currentIndex >= maxIndex;
        
        updateIndicators();
      }
      
      // Next slide
      function nextSlide() {
        if (currentIndex < totalSlides - getSlidesPerView()) {
          goToSlide(currentIndex + 1);
        }
      }
      
      // Previous slide
      function prevSlide() {
        if (currentIndex > 0) {
          goToSlide(currentIndex - 1);
        }
      }
      
      // Event listeners
      nextButton.addEventListener('click', nextSlide);
      prevButton.addEventListener('click', prevSlide);
      
      // Auto-advance carousel
      let autoSlideInterval: NodeJS.Timeout;
      function startAutoSlide() {
        autoSlideInterval = setInterval(() => {
          if (currentIndex >= totalSlides - getSlidesPerView()) {
            goToSlide(0);
          } else {
            nextSlide();
          }
        }, 5000);
      }
      
      function stopAutoSlide() {
        clearInterval(autoSlideInterval);
      }
      
      // Pause auto-slide on hover
      carousel.addEventListener('mouseenter', stopAutoSlide);
      carousel.addEventListener('mouseleave', startAutoSlide);
      
      // Handle window resize
      window.addEventListener('resize', () => {
        createIndicators();
        goToSlide(0); // Reset to first slide
      });
      
      // Initialize
      createIndicators();
      goToSlide(0);
      startAutoSlide();
      
      // Keyboard navigation
      document.addEventListener('keydown', (e) => {
        if (e.key === 'ArrowLeft') prevSlide();
        if (e.key === 'ArrowRight') nextSlide();
      });
    }
    
    // Lightbox functionality is now handled by the Lightbox.astro component
  });
</script>

<style>
  .line-clamp-2 {
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
  
  .prose h1, .prose h2, .prose h3, .prose h4, .prose h5, .prose h6 {
    font-family: 'Playfair Display', serif;
    font-weight: 600;
    color: #0f172a;
  }
  
  .prose p {
    margin-bottom: 1.5em;
    line-height: 1.7;
  }
  
  .prose ul, .prose ol {
    margin: 1.5em 0;
    padding-left: 1.5em;
  }
  
  .prose li {
    margin-bottom: 0.5em;
  }
  
  .prose strong {
    font-weight: 600;
    color: #374151;
  }
  
  .faq-trigger:focus-visible {
    outline: 2px solid #2563eb;
    outline-offset: 2px;
    border-radius: 4px;
  }
  
  .faq-content {
    animation: fadeIn 0.3s ease-out;
  }
  
  @keyframes fadeIn {
    from { opacity: 0; transform: translateY(-10px); }
    to { opacity: 1; transform: translateY(0); }
  }
</style>

<!-- Include the consolidated Lightbox component -->
<Lightbox />

<!-- JSON-LD structured data -->
<script type="application/ld+json" set:html={JSON.stringify(serviceStructuredData)}></script>