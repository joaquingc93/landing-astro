---
import { getOptimizedImageUrl } from '@/lib/utils';
import type { Testimonial } from '@/schemas/wordpress';

export interface Props {
  testimonials: Testimonial[];
}

const { testimonials } = Astro.props;

// Expand testimonials with additional fallback data if needed
const allTestimonials = testimonials.length > 0 ? testimonials : [
  {
    id: 1,
    slug: 'maria-rodriguez',
    title: { rendered: 'Outstanding Pool Renovation' },
    content: { rendered: 'RenovaLink completely transformed our backyard. The pool renovation exceeded our expectations with beautiful lighting and a stunning waterfall feature. The team was professional and completed the work on time.' },
    excerpt: { rendered: 'Amazing pool transformation' },
    date: new Date().toISOString(),
    modified: new Date().toISOString(),
    status: 'publish' as const,
    acf: {
      client_name: 'Maria Rodriguez',
      client_location: 'Miami, FL',
      rating: 5,
      service_category: 'pool' as const,
    }
  },
  {
    id: 2,
    slug: 'john-smith',
    title: { rendered: 'Excellent Concrete Work' },
    content: { rendered: 'The decorative concrete patio looks absolutely fantastic. The team\'s attention to detail and craftsmanship is evident in every aspect of the work. Highly recommend RenovaLink for any concrete projects.' },
    excerpt: { rendered: 'Professional concrete services' },
    date: new Date().toISOString(),
    modified: new Date().toISOString(),
    status: 'publish' as const,
    acf: {
      client_name: 'John Smith',
      client_location: 'Orlando, FL',
      rating: 5,
      service_category: 'concrete' as const,
    }
  },
  {
    id: 3,
    slug: 'sarah-johnson',
    title: { rendered: 'Reliable Cleaning Service' },
    content: { rendered: 'Their residential cleaning service is top-notch. They use eco-friendly products and pay attention to every detail. Our house has never been cleaner, and the recurring service keeps it that way.' },
    excerpt: { rendered: 'Eco-friendly cleaning excellence' },
    date: new Date().toISOString(),
    modified: new Date().toISOString(),
    status: 'publish' as const,
    acf: {
      client_name: 'Sarah Johnson',
      client_location: 'Tampa, FL',
      rating: 5,
      service_category: 'cleaning' as const,
    }
  },
  {
    id: 4,
    slug: 'mike-davis',
    title: { rendered: 'Professional Engineering Support' },
    content: { rendered: 'When we needed structural plans for our home addition, RenovaLink\'s certified engineers provided detailed, accurate drawings that passed inspection on the first try. Their technical expertise is exceptional.' },
    excerpt: { rendered: 'Certified engineering excellence' },
    date: new Date().toISOString(),
    modified: new Date().toISOString(),
    status: 'publish' as const,
    acf: {
      client_name: 'Mike Davis',
      client_location: 'Jacksonville, FL',
      rating: 5,
      service_category: 'technical' as const,
    }
  }
];

// Service category icons
const serviceIcons = {
  pool: 'M13 2L3 14h9l-1 8 10-12h-9l1-8z',
  concrete: 'M19 21H5a2 2 0 01-2-2V5a2 2 0 012-2h14a2 2 0 012 2v14a2 2 0 01-2 2z',
  cleaning: 'M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16',
  technical: 'M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z'
};
---

<!-- Testimonials Carousel -->
    <div class="relative max-w-6xl mx-auto">
      
      <!-- Testimonials Container -->
      <div id="testimonials-container" class="overflow-hidden">
        <div id="testimonials-track" class="flex transition-transform duration-500 ease-in-out">
          {allTestimonials.map((testimonial) => (
            <div class="testimonial-slide w-full flex-shrink-0">
              <div class="grid grid-cols-1 lg:grid-cols-2 gap-8 lg:gap-12 items-center">
                
                <!-- Quote Content -->
                <div class="order-2 lg:order-1">
                  <div class="relative">
                    <!-- Quote Icon -->
                    <div class="absolute -top-4 -left-2 text-primary-200">
                      <svg class="w-16 h-16" fill="currentColor" viewBox="0 0 32 32">
                        <path d="M10 8c-3.3 0-6 2.7-6 6v8c0 1.1.9 2 2 2h4c1.1 0 2-.9 2-2v-6c0-1.1-.9-2-2-2H8c0-2.2 1.8-4 4-4V8zm14 0c-3.3 0-6 2.7-6 6v8c0 1.1.9 2 2 2h4c1.1 0 2-.9 2-2v-6c0-1.1-.9-2-2-2h-2c0-2.2 1.8-4 4-4V8z" />
                      </svg>
                    </div>
                    
                    <!-- Testimonial Text -->
                    <div class="pl-8">
                      <p class="text-xl lg:text-2xl text-neutral-700 leading-relaxed mb-8">
                        {testimonial.content.rendered.replace(/<[^>]*>/g, '')}
                      </p>
                      
                      <!-- Rating -->
                      <div class="flex items-center gap-1 mb-6">
                        {Array.from({ length: 5 }, (_, i) => (
                          <svg 
                            class={`w-5 h-5 ${i < (testimonial.acf?.rating || 5) ? 'text-yellow-400' : 'text-neutral-300'}`}
                            fill="currentColor" 
                            viewBox="0 0 20 20"
                          >
                            <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z" />
                          </svg>
                        ))}
                      </div>
                      
                      <!-- Client Info -->
                      <div class="flex items-center gap-4">
                        <div>
                          <h4 class="font-semibold text-neutral-900 text-lg">
                            {testimonial.acf?.client_name}
                          </h4>
                          <p class="text-neutral-600 text-sm">
                            {testimonial.acf?.client_location}
                          </p>
                        </div>
                        
                        <!-- Service Category -->
                        {testimonial.acf?.service_category && (
                          <div class="ml-auto">
                            <div class="flex items-center gap-2 px-3 py-1 bg-primary-100 text-primary-700 rounded-full text-xs font-medium">
                              <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24" stroke-width="2">
                                <path stroke-linecap="round" stroke-linejoin="round" d={serviceIcons[testimonial.acf.service_category] || serviceIcons.technical} />
                              </svg>
                              <span class="capitalize">{testimonial.acf.service_category}</span>
                            </div>
                          </div>
                        )}
                      </div>
                    </div>
                  </div>
                </div>
                
                <!-- Client Image/Visual -->
                <div class="order-1 lg:order-2">
                  <div class="relative">
                    {testimonial.acf?.testimonial_image ? (
                      <div class="aspect-square rounded-2xl overflow-hidden shadow-2xl">
                        <img 
                          src={getOptimizedImageUrl(testimonial.acf.testimonial_image, 400, 400)}
                          alt={testimonial.acf.testimonial_image.alt || `${testimonial.acf.client_name} testimonial`}
                          class="w-full h-full object-cover"
                          loading="lazy"
                        />
                      </div>
                    ) : (
                      <!-- Default avatar with service icon -->
                      <div class="aspect-square rounded-2xl bg-gradient-to-br from-primary-500 to-primary-700 shadow-2xl flex items-center justify-center">
                        <div class="text-center text-white">
                          <div class="w-20 h-20 bg-white/20 rounded-full flex items-center justify-center mx-auto mb-4">
                            <svg class="w-10 h-10" fill="none" stroke="currentColor" viewBox="0 0 24 24" stroke-width="2">
                              <path stroke-linecap="round" stroke-linejoin="round" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z" />
                            </svg>
                          </div>
                          <h4 class="text-xl font-semibold mb-1">{testimonial.acf?.client_name}</h4>
                          <p class="text-primary-200 text-sm">{testimonial.acf?.client_location}</p>
                        </div>
                      </div>
                    )}
                    
                    <!-- Decorative Elements -->
                    <div class="absolute -top-4 -right-4 w-24 h-24 bg-secondary-400/20 rounded-full -z-10"></div>
                    <div class="absolute -bottom-6 -left-6 w-32 h-32 bg-primary-300/20 rounded-full -z-10"></div>
                  </div>
                </div>
              </div>
            </div>
          ))}
        </div>
      </div>
      
      <!-- Navigation Arrows -->
      <button 
        id="prev-testimonial"
        class="absolute left-4 top-1/2 transform -translate-y-1/2 bg-white shadow-lg hover:shadow-xl p-3 rounded-full text-neutral-600 hover:text-primary-600 transition-all duration-300 z-10"
        aria-label="Previous testimonial"
      >
        <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7" />
        </svg>
      </button>
      
      <button 
        id="next-testimonial"
        class="absolute right-4 top-1/2 transform -translate-y-1/2 bg-white shadow-lg hover:shadow-xl p-3 rounded-full text-neutral-600 hover:text-primary-600 transition-all duration-300 z-10"
        aria-label="Next testimonial"
      >
        <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7" />
        </svg>
      </button>
      
      <!-- Dots Indicator -->
      <div class="flex justify-center mt-8 gap-2">
        {allTestimonials.map((_, index) => (
          <button 
            class={`testimonial-dot w-3 h-3 rounded-full transition-all duration-300 ${
              index === 0 ? 'bg-primary-600 w-8' : 'bg-neutral-300 hover:bg-primary-400'
            }`}
            data-index={index}
            aria-label={`Go to testimonial ${index + 1}`}
          ></button>
        ))}
      </div>
    </div>
    
    <!-- Trust Badges -->
    <div class="mt-16 pt-12 border-t border-neutral-200">
      <div class="flex flex-wrap justify-center items-center gap-8 opacity-60">
        <div class="flex items-center gap-2 text-sm font-medium text-neutral-600">
          <svg class="w-5 h-5 text-green-500" fill="currentColor" viewBox="0 0 20 20">
            <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd" />
          </svg>
          <span>100+ Happy Clients</span>
        </div>
        
        <div class="flex items-center gap-2 text-sm font-medium text-neutral-600">
          <svg class="w-5 h-5 text-yellow-500" fill="currentColor" viewBox="0 0 20 20">
            <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z" />
          </svg>
          <span>5-Star Average Rating</span>
        </div>
        
        <div class="flex items-center gap-2 text-sm font-medium text-neutral-600">
          <svg class="w-5 h-5 text-blue-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4M7.835 4.697a3.42 3.42 0 001.946-.806 3.42 3.42 0 014.438 0 3.42 3.42 0 001.946.806 3.42 3.42 0 013.138 3.138 3.42 3.42 0 00.806 1.946 3.42 3.42 0 010 4.438 3.42 3.42 0 00-.806 1.946 3.42 3.42 0 01-3.138 3.138 3.42 3.42 0 00-1.946.806 3.42 3.42 0 01-4.438 0 3.42 3.42 0 00-1.946-.806 3.42 3.42 0 01-3.138-3.138 3.42 3.42 0 00-.806-1.946 3.42 3.42 0 010-4.438 3.42 3.42 0 00.806-1.946 3.42 3.42 0 013.138-3.138z" />
          </svg>
          <span>Licensed & Certified</span>
        </div>
        
        <div class="flex items-center gap-2 text-sm font-medium text-neutral-600">
          <svg class="w-5 h-5 text-purple-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z" />
          </svg>
          <span>On-Time Completion</span>
        </div>
      </div>
    </div>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const track = document.getElementById('testimonials-track');
    const prevBtn = document.getElementById('prev-testimonial');
    const nextBtn = document.getElementById('next-testimonial');
    const dots = document.querySelectorAll('.testimonial-dot');
    const totalSlides = document.querySelectorAll('.testimonial-slide').length;
    
    let currentIndex = 0;
    let autoPlayInterval: NodeJS.Timeout | undefined;
    
    function updateCarousel() {
      if (track) {
        track.style.transform = `translateX(-${currentIndex * 100}%)`;
      }
      
      // Update dots
      dots.forEach((dot, index) => {
        if (index === currentIndex) {
          dot.classList.add('bg-primary-600', 'w-8');
          dot.classList.remove('bg-neutral-300', 'w-3');
        } else {
          dot.classList.remove('bg-primary-600', 'w-8');
          dot.classList.add('bg-neutral-300', 'w-3');
        }
      });
    }
    
    function nextSlide() {
      currentIndex = (currentIndex + 1) % totalSlides;
      updateCarousel();
    }
    
    function prevSlide() {
      currentIndex = (currentIndex - 1 + totalSlides) % totalSlides;
      updateCarousel();
    }
    
    function goToSlide(index: number) {
      currentIndex = index;
      updateCarousel();
    }
    
    function startAutoPlay() {
      autoPlayInterval = setInterval(nextSlide, 6000);
    }
    
    function stopAutoPlay() {
      if (autoPlayInterval) {
        clearInterval(autoPlayInterval);
      }
    }
    
    // Event listeners
    nextBtn?.addEventListener('click', () => {
      stopAutoPlay();
      nextSlide();
      startAutoPlay();
    });
    
    prevBtn?.addEventListener('click', () => {
      stopAutoPlay();
      prevSlide();
      startAutoPlay();
    });
    
    // Dot navigation
    dots.forEach((dot, index) => {
      dot.addEventListener('click', () => {
        stopAutoPlay();
        goToSlide(index);
        startAutoPlay();
      });
    });
    
    // Pause on hover
    const container = document.getElementById('testimonials-container');
    container?.addEventListener('mouseenter', stopAutoPlay);
    container?.addEventListener('mouseleave', startAutoPlay);
    
    // Touch/swipe support
    let touchStartX = 0;
    let touchEndX = 0;
    
    container?.addEventListener('touchstart', (e) => {
      touchStartX = e.changedTouches[0].screenX;
    });
    
    container?.addEventListener('touchend', (e) => {
      touchEndX = e.changedTouches[0].screenX;
      handleSwipe();
    });
    
    function handleSwipe() {
      const swipeThreshold = 50;
      const diff = touchStartX - touchEndX;
      
      if (Math.abs(diff) > swipeThreshold) {
        stopAutoPlay();
        if (diff > 0) {
          nextSlide();
        } else {
          prevSlide();
        }
        startAutoPlay();
      }
    }
    
    // Keyboard navigation
    document.addEventListener('keydown', (e) => {
      if (e.key === 'ArrowLeft') {
        stopAutoPlay();
        prevSlide();
        startAutoPlay();
      } else if (e.key === 'ArrowRight') {
        stopAutoPlay();
        nextSlide();
        startAutoPlay();
      }
    });
    
    // Start autoplay
    if (totalSlides > 1) {
      startAutoPlay();
    }
    
    // Intersection Observer to pause when not visible
    if ('IntersectionObserver' in window) {
      const observer = new IntersectionObserver((entries) => {
        entries.forEach(entry => {
          if (entry.isIntersecting) {
            startAutoPlay();
          } else {
            stopAutoPlay();
          }
        });
      });
      
      if (container) {
        observer.observe(container);
      }
    }
  });
</script>

<style>
  .testimonial-slide {
    padding: 0 2rem;
  }
  
  @media (max-width: 1023px) {
    .testimonial-slide {
      padding: 0 1rem;
    }
  }
  
  /* Smooth transitions */
  .testimonial-dot {
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  }
  
  /* Performance optimizations */
  #testimonials-track {
    will-change: transform;
  }
  
  /* Accessibility improvements */
  .testimonial-dot:focus-visible {
    outline: 2px solid #2563eb;
    outline-offset: 2px;
  }
  
  /* Reduce motion for accessibility */
  @media (prefers-reduced-motion: reduce) {
    #testimonials-track {
      transition: none;
    }
    
    .testimonial-dot {
      transition: none;
    }
  }
</style>